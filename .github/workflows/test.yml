name: Test

on:
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
    - uses: actions/checkout@v2
    - name: install mamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: environment-dev.yml
        environment-name: landcover-mapping
    - name: Run type checks
      run: mypy .
    - name: Run flake8
      run: flake8 .
    - name: Run unit tests
      run: python -m unittest
    - uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0
    - name: Run data pipeline
      run: | 
        dvc pull -f
        openmapflow create-datasets --non-interactive
        dvc commit -f
        dvc push
    - name: Push automated dataset updates
      run: | 
        git config --global user.name 'Dataset bot'
        git config --global user.email 'dataset-bot@users.noreply.github.com'
        git pull
        git add data
        git commit -m "Automated dataset updates" || echo "No updates to commit"
        git push

    - name: Integration test - Project
      run: |
        openmapflow cp templates/integration_test_project.py .
        python -m unittest integration_test_project.py

    - name: Integration test - Data integrity
      run: |
        openmapflow cp templates/integration_test_datasets.py .
        python -m unittest integration_test_datasets.py

    - name: Integration test - Train and evaluate
      run: |
        openmapflow cp templates/integration_test_train_evaluate.py .
        python -m unittest integration_test_train_evaluate.py

    - name: Integration test - Model bboxes match evaluation sets
      run: python -m unittest test/integration_test_model_bbox.py
      
    - name: Integration test - Model results are consistent
      run: python -m unittest test/integration_test_model_evaluation.py

    - name: Integration test - Area
      run: python -m unittest test/integration_test_area.py

   


